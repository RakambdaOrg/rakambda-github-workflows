name: Docker publish

on:
  workflow_call:
    inputs:
      repository:
        description: "Repository to checkout"
        required: false
        type: string
      repository-ref:
        description: "Repository ref to checkout"
        required: false
        type: string
      build-args:
        description: "Docker build args"
        required: false
        type: string
      docker-image:
        description: "Name of the docker image to push"
        required: true
        type: string
      docker-platforms:
        description: "List of comma separated platforms to build"
        required: false
        type: string
        default: "linux/amd64"
      docker-extra-tag:
        description: "Static tag to add on build image"
        required: false
        type: string
      docker-auto-tag:
        description: "Wether to automatically tag or not"
        required: false
        type: boolean
        default: true
      runs-on:
        description: "Runner to use"
        required: false
        type: string
        default: "ubuntu-latest"
      environment:
        description: "Environment to use"
        required: false
        type: string
      environment-url:
        description: "Environment URL to use"
        required: false
        type: string
    secrets:
      docker-repo:
        description: "Docker registry to push to"
        required: true
      docker-username:
        description: "Docker username"
        required: true
      docker-token:
        description: "Docker token"
        required: true
    outputs:
      image-digest:
        description: "Pushed docker image's digest"
        value: ${{ jobs.publish.outputs.digest }}

permissions:
  contents: read
  packages: write

jobs:
  publish:
    name: Docker - Publish
    runs-on: [ "${{ inputs.runs-on }}" ]
    concurrency: docker-${{ inputs.docker-extra-tag }}
    environment:
      name: ${{ inputs.environment }}
      url: ${{ inputs.environment-url }}
    outputs:
      digest: ${{ steps.docker_build.outputs.digest }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4.2.2
        with:
          repository: '${{ inputs.repository }}'
          ref: '${{ inputs.repository-ref }}'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1
      - name: Login on registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ secrets.docker-repo }}
          username: ${{ secrets.docker-username }}
          password: ${{ secrets.docker-token }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5.7.0
        with:
          images: ${{ secrets.docker-repo }}/${{ inputs.docker-image }}
          tags: |
            # Default values
            type=schedule,enable=${{ inputs.docker-auto-tag }}
            type=ref,event=branch,enable=${{ inputs.docker-auto-tag }}
            type=ref,event=tag,enable=${{ inputs.docker-auto-tag }}
            type=ref,event=pr,enable=${{ inputs.docker-auto-tag }}
            # Set latest tag for default branch
            type=raw,value=latest,enable=${{ inputs.docker-auto-tag && github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            # Custom tag
            ${{ inputs.docker-extra-tag != '' && format('type=raw,value={0},enable=true', inputs.docker-extra-tag) || ''  }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ inputs.docker-platforms }}
          build-args: |
            BUILDX_QEMU_ENV=true
            ${{ inputs.build-args }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
