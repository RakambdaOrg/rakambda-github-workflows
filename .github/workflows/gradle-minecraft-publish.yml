name: Gradle Minecraft publish

on:
  workflow_call:
    inputs:
      java-version:
        description: "JDK version to use"
        required: true
        type: string
      java-distribution:
        description: "JDK distribution to use"
        required: false
        type: string
        default: "temurin"
      runs-on:
        description: "Runner to use"
        required: false
        type: string
        default: "ubuntu-latest"
    secrets:
      curseforge-token:
        required: true
      modrinth-token:
        required: true

jobs:
  publish-curseforge:
    name: Gradle - Publish - Curseforge
    runs-on: [ "${{ inputs.runs-on }}" ]
    concurrency: publish-curseforge
    steps:
      - name: Checkout source
        uses: actions/checkout@v4.2.2
      - name: Set up JDK
        uses: actions/setup-java@v4.7.1
        with:
          distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4.4.0
      - name: Publish
        run: |
          ./gradlew \
          build \
          curseforge \
          -PcurseforgeApiKey=${{ secrets.curseforge-token }} \
          -PmodrinthToken=${{ secrets.modrinth-token }} \
          -Pversion=${{ steps.get_release.outputs.name }} \
          -Pchangelog="[Changelog on GitHub](${{ steps.get_release.outputs.html_url }})
          
          ${{ steps.get_release.outputs.body }}"

  publish-modrinth:
    name: Gradle - Publish - Modrinth
    runs-on: ubuntu-latest
    concurrency: publish-modrinth
    steps:
      - name: Checkout source
        uses: actions/checkout@v4.2.2
      - name: Set up JDK
        uses: actions/setup-java@v4.7.1
        with:
          distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}

      - name: Restore keystore
        run: |
          if [ ! -z "${{ secrets.keystore }}" ]; then
            echo "${{ secrets.keystore }}" > keystoreForgeMods.jks.asc
            gpg -d --passphrase "${{ secrets.keystore-passphrase }}" --batch keystoreForgeMods.jks.asc > keystoreForgeMods.jks
          fi

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4.4.0
      - name: Publish
        run: |
          ./gradlew \
          build \
          modrinth \
          modrinthSyncBody \
          -PforgeKeyStore=keystoreForgeMods.jks \
          -PforgeKeyStoreAlias=${{ secrets.key-alias }} \
          -PforgeKeyStorePass=${{ secrets.key-store-pass }} \
          -PforgeKeyStoreKeyPass=${{ secrets.key-pass }} \
          -PforgeSignSHA1=f927f4701bf4c0620c7bd0a501ce278f5e5ecc62 \
          -PcurseforgeApiKey=${{ secrets.curseforge-token }} \
          -PmodrinthToken=${{ secrets.modrinth-token }} \
          -Pversion=${{ steps.get_release.outputs.name }} \
          -Pchangelog="[Changelog on GitHub](${{ steps.get_release.outputs.html_url }})
          
          ${{ steps.get_release.outputs.body }}"
