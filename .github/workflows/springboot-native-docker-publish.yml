name: SpringBoot Gradle native Docker publish

on:
  workflow_call:
    inputs:
      java-version:
        description: "JDK version to use"
        required: true
        type: string
      docker-image:
        description: "Name of the docker image to push"
        required: true
        type: string
      docker-tag:
        description: "Tag of the docker image to push, defaults to current branch name"
        required: false
        type: string
        default: ""
      runs-on:
        description: "Runner to use"
        required: false
        type: string
        default: "ubuntu-latest"
      timeout:
        description: "Timeout for the build"
        required: false
        type: number
        default: 60
    secrets:
      docker-repo:
        description: "Docker registry to push to"
        required: true
      docker-username:
        description: "Docker username"
        required: true
      docker-token:
        description: "Docker token"
        required: true

jobs:
  publish:
    name: SpringBoot Native Gradle - Publish Docker
    runs-on: [ "${{ inputs.runs-on }}" ]
    concurrency: docker-${{ inputs.docker-tag }}
    timeout-minutes: ${{ inputs.timeout }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4.2.2
      - name: Login on registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ secrets.docker-repo }}
          username: ${{ secrets.docker-username }}
          password: ${{ secrets.docker-token }}
      - name: Set up JDK
        uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: ${{ inputs.java-version }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: "true"

      - name: Calculate image tag
        id: image-tag
        run: |
          if [ -z "${{ inputs.docker-tag }}" ]; then
            echo "tag=${GITHUB_REF##*/}" >> "$GITHUB_OUTPUT"
          else
            echo "tag=${{ inputs.docker-tag }}" >> "$GITHUB_OUTPUT"
          fi
      
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4.4.1
        with:
          cache-disabled: true
      - name: Boot build native
        run: |
          ./gradlew \
          bootBuildImage \
          --imageName=${{ secrets.docker-repo }}/${{ inputs.docker-image }}:${{ steps.image-tag.outputs.tag }}
      - name: Push on registry
        run: |
          docker push ${{ secrets.docker-repo }}/${{ inputs.docker-image }}:${{ steps.image-tag.outputs.tag }}
