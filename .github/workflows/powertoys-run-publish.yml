name: PowerToysRun Publish

on:
  workflow_call:
    inputs:
      dotnet-version:
        description: ".NET version to use"
        required: true
        type: string
      plugin-name:
        description: "Plugin name"
        required: true
        type: string
      platform:
        description: "Platform to build"
        required: true
        type: string
      release-type:
        description: "Type of release to make"
        required: false
        type: string
        default: "Release"
      solution-path:
        description: "Path to the solution .sln file"
        required: true
        type: string
      project-path:
        description: "Path to the project folder, containing the .csproj file"
        required: true
        type: string
      runs-on:
        description: "Runner to use"
        required: false
        type: string
        default: "windows-latest"

permissions:
  contents: write

jobs:
  publish:
    name: Add artifact to release (${{ inputs.platform }})
    runs-on: [ "${{ inputs.runs-on }}" ]
    concurrency: zip_${{ inputs.platform }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4.2.2
      - name: Setup .NET
        uses: actions/setup-dotnet@v4.3.1
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Update plugin.json
        run: |
           Get-Content "${{ inputs.project-path }}\plugin.json" | jq ".Version=""${{ steps.get_release.outputs.name }}""" > "${{ inputs.project-path }}\plugin.json.new"
           Move-Item -Force -Path "${{ inputs.project-path }}\plugin.json.new" -Destination "${{ inputs.project-path }}\plugin.json"
      - name: Build
        run: dotnet build "${{ inputs.solution-path }}" --configuration "${{ inputs.release-type }}" /p:Platform=${{ inputs.platform }} /p:EnableWindowsTargeting=true
      - name: Prepare artifact
        run: |
          Remove-Item -Path "${{ inputs.project-path }}\bin\*" -Recurse -Include "*.xml", "*.pdb", "PowerToys.*", "Wox.*"
          Rename-Item -Path "${{ inputs.project-path }}\bin\${{ inputs.platform }}\Release" -NewName "${{ inputs.plugin-name }}"
          if (Test-Path -Path "${{ inputs.plugin-name }}-${{ inputs.platform }}.zip")
          {
             Remove-Item -Path "${{ inputs.plugin-name }}-${{ inputs.platform }}.zip" 
          }
          Compress-Archive -Path "${{ inputs.project-path }}\bin\${{ inputs.platform }}\${{ inputs.plugin-name }}" -DestinationPath "${{ inputs.plugin-name }}-${{ inputs.platform }}.zip"
      - name: Add file to release
        uses: softprops/action-gh-release@v2.2.1
        with:
          fail_on_unmatched_files: false
          generate_release_notes: true
          files: |
            ${{ inputs.plugin-name }}-${{ inputs.platform }}.zip
